{"version":3,"sources":["images/loginImage.jpg","images/HeroHunt.jpg","JuggernautHunt/game-images/jugger.png","images/morph.jpg","images/phoenix.png","services.js","JuggernautHunt/TopScores.jsx","utilities.js","HeroHunt/TopScoresHero.jsx","components/Navigation.jsx","components/Home.jsx","components/Profile.jsx","JuggernautHunt/FlippyComponent.jsx","JuggernautHunt/SingleField.jsx","JuggernautHunt/Table.jsx","components/Login.jsx","components/Register.jsx","HeroHunt/HeroHunt.jsx","App.js","index.js"],"names":["module","exports","config","headers","TopScores","useState","topScores","setTopScores","useEffect","axios","get","then","res","data","sort","a","b","juggHuntScore","slice","map","el","key","_id","username","TopScoresHero","heroHuntScore","className","Navigation","loggedPlayer","Navbar","bg","variant","sticky","Container","Brand","to","Toggle","Collapse","Text","onClick","localStorage","clear","Home","logedPlayer","JSON","parse","getItem","id","Row","Col","md","Image","src","roundedCircle","order","HeroHunt","Profile","useParams","history","useHistory","loggedUser","lg","Card","Body","fluid","loginImage","password","Button","block","push","Flippycomponent","toggleJuggKill","isDead","handleClick","resize","isFlipped","flipDirection","style","width","height","margin","backgroundColor","borderRadius","alive","rounded","SingleField","Table","nrows","ncols","chanceJuggOnStart","board","y","row","x","Math","random","createTable","initTable","setInitTable","hasWon","setHasWon","time","setTime","score","setScore","int","setInt","setInterval","console","log","clearInterval","prev","scores","stringify","post","postScores","coord","split","item","parseInt","toggleJugg","isWin","every","cell","backgroundImage","background","backgroundRepeat","backgroundSize","paddingTop","tblBoard","makeTable","Login","setIsLogged","logError","setLogError","isLoading","setLoading","userLoggingIn","setUserLoggingIn","handleNewUser","e","target","name","value","prevUser","toLowerCase","Promise","resolve","setTimeout","classes","icon","faCheck","size","text","Form","onSubmit","preventDefault","checkUser","filter","length","setItem","catch","err","Group","Control","type","placeholder","onChange","disabled","Register","newUser","setNewUser","errorMsg","setErrorMsg","registerImage","userInfo","postUser","heroes","setHeroes","bounty","setBouty","setIsWin","scoreHunt","setScoreHunt","getShuffledArr","arr","newArr","i","rand","floor","postScoresHeroHunt","pickAhero","index","findIndex","img","idx","localized_name","App","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57415a1a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loginImage.68ecbd3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/HeroHunt.66ff4160.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jugger.5c7f3563.png\";","module.exports = __webpack_public_path__ + \"static/media/morph.d11b50a8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/phoenix.23dddef4.png\";","import axios from \"axios\";\r\n\r\nlet config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-apikey\": \"5f63daa75313511c55fc97b7\",\r\n    }\r\n  };\r\n\r\nexport const postUser = (userInfo) => {\r\n   let data = JSON.stringify(userInfo)\r\n\r\n  return axios.post('https://gamestorage-9cd1.restdb.io/rest/testcollection',data,config);\r\n};\r\n\r\n\r\n\r\n\r\nexport const getDotainfos = ()=>{\r\n  return axios.get('https://api.opendota.com/api/heroStats/')\r\n}\r\n\r\nexport const loginUser = ()=>{\r\n    \r\n    return axios.get('https://gamestorage-9cd1.restdb.io/rest/testcollection',config)\r\n} \r\n\r\nexport const getImages=()=>{\r\n  return axios.get('https://gamestorage-9cd1.restdb.io/media/5f693ab3db00907500005feb',config) \r\n}\r\n\r\nexport const postScores = (scores) => {\r\n  let data = JSON.stringify(scores)\r\n\r\n return axios.post('https://gamestorage-9cd1.restdb.io/rest/scores',data,config);\r\n}\r\n\r\nexport const getScores = () => {\r\n return axios.get('https://gamestorage-9cd1.restdb.io/rest/scores',config);\r\n}\r\n\r\nexport const postScoresHeroHunt = (scores) => {\r\n  let data = JSON.stringify(scores)\r\n\r\n return axios.post('https://gamestorage-9cd1.restdb.io/rest/herohuntscore',data,config);\r\n}\r\n\r\nexport const getScoresHeroHunt = () => {\r\n return axios.get('https://gamestorage-9cd1.restdb.io/rest/herohuntscore',config);\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getScores } from '../services'\r\nimport { topResults } from '../utilities'\r\n\r\nexport const TopScores = ()=>{\r\nconst [topScores,setTopScores] = useState([])\r\n    useEffect(()=>{\r\n        getScores().then(res=>{\r\n            // console.log(res.data)\r\n            // console.log(topResults(res.data))\r\n            setTopScores(topResults(res.data))\r\n          })\r\n    },[])\r\n    return(\r\n        <div>\r\n            <ol>\r\n    {topScores.map(el=><li key={el._id}> <span>{el.username}</span> - <span>{el.juggHuntScore} seconds</span> </li>)}\r\n            </ol>\r\n        </div>\r\n    )\r\n}","\r\n\r\nexport const topResults = (allRes)=>{\r\n    let sortedRes = allRes.sort((a,b)=>a.juggHuntScore - b.juggHuntScore)\r\n    let topTen = sortedRes.slice(0,10)\r\n    return topTen\r\n}\r\nexport const topResultsHero = (allRes)=>{\r\n    let sortedRes = allRes.sort((a,b)=>a.heroHuntScore - b.heroHuntScore)\r\n    let topTen = sortedRes.slice(0,10)\r\n    return topTen\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getScoresHeroHunt } from '../services'\r\nimport { topResultsHero } from '../utilities'\r\n\r\nexport const TopScoresHero = ()=>{\r\nconst [topScores,setTopScores] = useState([])\r\n    useEffect(()=>{\r\n        getScoresHeroHunt().then(res=>{\r\n            // console.log(res.data)\r\n            // console.log(topResultsHero(res.data))\r\n            setTopScores(topResultsHero(res.data))\r\n          })\r\n    },[])\r\n    return(\r\n        <div>\r\n            <ol className='linkovi'>\r\n    {topScores.map(el=><li key={el._id}> <span>{el.username}</span> - <span>{el.heroHuntScore} seconds</span> </li>)}\r\n            </ol>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Navbar from 'react-bootstrap/esm/Navbar';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const Navigation = ({loggedPlayer})=>{\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" className='navigation ' sticky=\"top\">\r\n        <Container>\r\n          <Navbar.Brand>\r\n            <Link className=\"linkovi\" to=\"/user\">\r\n              Home\r\n            </Link>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle />\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Navbar.Text>\r\n              <Link\r\n                to=\"/\"\r\n                className=\"LogOut\"\r\n                onClick={() => localStorage.clear()}\r\n              >\r\n                Log out\r\n              </Link>\r\n            </Navbar.Text>\r\n            <Navbar.Text>\r\n              Signed in as:{\"  \"}\r\n              <Link to={`/user/${loggedPlayer.username}`} className=\"PRofile\">\r\n                {`${loggedPlayer.username}`}\r\n              </Link>\r\n            </Navbar.Text>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    )\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport { TopScores } from \"../JuggernautHunt/TopScores\";\r\nimport HeroHunt from '../images/HeroHunt.jpg'\r\nimport { TopScoresHero } from \"../HeroHunt/TopScoresHero\";\r\nimport {Navigation} from './Navigation.jsx'\r\nexport const Home = () => {\r\n  // const [user, setUser] = useState(userData);\r\n\r\n  // let logedPlayer = localStorage.getItem(\"LoggedUser\")\r\n  //   ? JSON.parse(localStorage.getItem(\"LoggedUser\"))\r\n  //   : null;\r\n\r\n  let logedPlayer = JSON.parse(localStorage.getItem(\"LoggedUser\"));\r\n  // console.log(logedPlayer);\r\n  return (\r\n    <div>\r\n     \r\n      <Navigation loggedPlayer={logedPlayer}/>\r\n\r\n      <section id=\"JuggerHunt\" bg='light' variant='light' className=\"text-muted py-5\">\r\n      <Container >\r\n        <Row>\r\n          <Col md={6} >\r\n            <Link to=\"/JuggernautHunt\">\r\n              <Image\r\n                src=\"https://gamestorage-9cd1.restdb.io/media/5f6939f4db00907500005fe2\"\r\n                roundedCircle\r\n                className=\" img-fluid  mb-3 \"\r\n              />\r\n            </Link>\r\n         </Col>\r\n\r\n         <Col md={6}>\r\n         <h3>Score board - TOP 10</h3>\r\n         <TopScores/>\r\n         </Col>\r\n\r\n\r\n        \r\n        </Row>\r\n      </Container>\r\n      </section>\r\n\r\n      <section id=\"HeroHunt\" className=\"py-5\">\r\n      <Container >\r\n        <Row>\r\n          <Col  md={{order:2}}>\r\n            <Link to=\"/HeroHunt\">\r\n              <Image\r\n                src={HeroHunt}\r\n                roundedCircle\r\n                className=\" img-fluid  mb-3 \"\r\n              />\r\n            </Link>\r\n         </Col>\r\n\r\n         <Col  md={{order:1}} >\r\n         <h3 className='linkovi'>Score board - TOP 10</h3>\r\n         <TopScoresHero />\r\n         </Col>\r\n\r\n\r\n          \r\n        </Row>\r\n      </Container>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\"\r\nimport loginImage from '../images/loginImage.jpg'\r\nimport Col from \"react-bootstrap/esm/Col\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport { Navigation } from \"./Navigation\";\r\n\r\n\r\nexport const Profile = () => {\r\n\r\n  const id = useParams().username;\r\n  const history = useHistory()\r\n  let loggedUser = JSON.parse(localStorage.getItem(\"LoggedUser\"));\r\n  // console.log(id);\r\n\r\n  return (\r\n    <>\r\n      {loggedUser.username === id ? (<div>\r\n        <Navigation\r\n        loggedPlayer={JSON.parse(localStorage.getItem(\"LoggedUser\"))}\r\n      />\r\n      \r\n      <div className='profile-wrapp'>\r\n        <Col lg={6} >\r\n                <Card className='wanted-card'>\r\n                  <Card.Body className='wanted-card-content'>\r\n                  <Image\r\n                fluid\r\n                className=\" w-50 mb-3 wanted\"\r\n                src={loginImage}\r\n                roundedCircle\r\n              />\r\n              <h3>{loggedUser.username}</h3>\r\n              <h5 className='text-muted'>Personal infos</h5>\r\n              <p>Your password is : {loggedUser.password}</p>\r\n\r\n              <Button variant=\"primary\" block onClick={()=>history.push(\"/user\")}>Back</Button>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n        \r\n        </div>\r\n        </div>\r\n      ) : (\r\n        <p>Корисник са ID: {id} не постоји</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport alive from \"./game-images/jugger.png\";\r\n\r\nexport const Flippycomponent = ({toggleJuggKill,isDead,resize})=>{\r\n\r\n    const handleClick = () => {\r\n        toggleJuggKill();\r\n      };\r\n    \r\n    return <Flippy\r\n    isFlipped={isDead}\r\n    flipDirection=\"vertical\"\r\n    style={{ width: '100px', height:'100px' ,margin:'0.1rem' }}\r\n\r\n  >\r\n    <FrontSide\r\n      style={{\r\n        backgroundColor:'#51c8ec',\r\n        \r\n        borderRadius: \"10px\",\r\n      }}\r\n      onClick={handleClick}\r\n    ></FrontSide>\r\n    <BackSide\r\n      style={{\r\n        backgroundColor: \"#076986\",\r\n        // lineHeight: \"10px\",\r\n        // paddingLeft: \"25px\",\r\n    \r\n        borderRadius: \"10px\"\r\n      }}\r\n      onClick={handleClick}\r\n    >\r\n      <Image src={alive} rounded className=\"flipImage\" />\r\n    </BackSide>\r\n  </Flippy>\r\n}","import React from \"react\";\r\n\r\nimport {Flippycomponent} from './FlippyComponent.jsx'\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nexport const SingleField = ({ toggleJuggKill, isDead }) => {\r\n\r\n  // const isDesktopOrLaptop = useMediaQuery({\r\n  //   query: '(min-device-width: 1224px)'\r\n  // })\r\n  // const isBigScreen = useMediaQuery({ query: '(min-device-width: 1224px)' })\r\n  \r\n  // const isTabletOrMobileDevice = useMediaQuery({query: '(max-width: 1224px)'})\r\n  // const isPortrait = useMediaQuery({ query: '(orientation: portrait)' })\r\n  \r\n  // const isMobile=useMediaQuery({ query: '(max-device-width: 800px)'})\r\n  return (\r\n    <td>\r\n    <Flippycomponent toggleJuggKill={toggleJuggKill} isDead={isDead} />\r\n    </td>\r\n \r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport Col from \"react-bootstrap/esm/Col\";\r\nimport Row from \"react-bootstrap/esm/Row\";\r\nimport { getScores, postScores } from \"../services\";\r\nimport { topResults } from \"../utilities\";\r\nimport { SingleField } from \"./SingleField\";\r\n\r\nimport background from \"../images/morph.jpg\";\r\nimport Container from \"react-bootstrap/esm/Container\";\r\nimport { Navigation } from \"../components/Navigation\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Table = ({ nrows, ncols, chanceJuggOnStart }) => {\r\n  const createTable = () => {\r\n    let board = [];\r\n    for (let y = 0; y < nrows; y++) {\r\n      let row = [];\r\n      for (let x = 0; x < ncols; x++) {\r\n        row.push(Math.random() < chanceJuggOnStart);\r\n      }\r\n      board.push(row);\r\n    }\r\n\r\n    return board;\r\n  };\r\n  const [initTable, setInitTable] = useState(createTable());\r\n  const [hasWon, setHasWon] = useState(false);\r\n  const [time, setTime] = useState(0);\r\n  const [score, setScore] = useState({ juggHuntScore: 0, username: \"\" });\r\n  const [int, setInt] = useState();\r\n\r\n  useEffect(() => {\r\n    setInt(\r\n      setInterval(() => {\r\n        // console.log(time)\r\n        setTime((time) => {\r\n          return time + 1;\r\n        });\r\n        console.log(\"izvrsilo se \");\r\n      }, 1000)\r\n    );\r\n\r\n    return () => clearInterval(int);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (hasWon) {\r\n      setScore((prev) => {\r\n        return {\r\n          ...prev,\r\n          juggHuntScore: time,\r\n          username: JSON.parse(localStorage.getItem(\"LoggedUser\")).username,\r\n        };\r\n      });\r\n      clearInterval(int);\r\n    }\r\n  }, [hasWon]);\r\n\r\n  useEffect(() => {\r\n    if (score.juggHuntScore !== 0) postScores(score);\r\n  }, [score]);\r\n\r\n  const toggleJuggKill = (coord) => {\r\n    let board = [...initTable];\r\n    // console.log(board)\r\n    let splitted = coord.split(\"-\");\r\n    let [x, y] = splitted.map((item) => parseInt(item));\r\n\r\n    function toggleJugg(x, y) {\r\n      // console.log(y, x);\r\n      if (x >= 0 && x < ncols && y >= 0 && y < nrows) {\r\n        board[y][x] = !board[y][x];\r\n      }\r\n    }\r\n    toggleJugg(y, x); //Flip initial\r\n    toggleJugg(y, x - 1); //flip left\r\n    toggleJugg(y, x + 1); //flip right\r\n    toggleJugg(y - 1, x); //flip below\r\n    toggleJugg(y + 1, x); //flip above\r\n    let isWin = board.every((row) => row.every((cell) => !cell));\r\n    //   setInit({hasWon:hasWon,board:board})\r\n    setHasWon(isWin);\r\n    setInitTable(board);\r\n  };\r\n\r\n  const makeTable = () => {\r\n    let tblBoard = [];\r\n    for (let y = 0; y < nrows; y++) {\r\n      let row = [];\r\n      for (let x = 0; x < ncols; x++) {\r\n        let coord = `${y}-${x}`;\r\n        row.push(\r\n          <SingleField\r\n            key={coord}\r\n            isDead={initTable[y][x]}\r\n            toggleJuggKill={() => toggleJuggKill(coord)}\r\n          />\r\n        );\r\n      }\r\n      tblBoard.push(<tr key={y}>{row}</tr>);\r\n    }\r\n    return (\r\n      <table className=\"Table\">\r\n        <tbody>{tblBoard}</tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation\r\n        loggedPlayer={JSON.parse(localStorage.getItem(\"LoggedUser\"))}\r\n      />\r\n      <Container\r\n        fluid\r\n        style={{\r\n          backgroundImage: `url(${background})`,\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\",\r\n          paddingTop:'15px'\r\n        }}\r\n      >\r\n        {hasWon ? (\r\n          <Container className=\"d-flex justify-content-center win-section\">\r\n          \r\n            \r\n              <span className=\"winner neon-blue\">YOU</span>\r\n              <span className=\"winner neon-blue\">WIN!</span>\r\n              \r\n          </Container>\r\n        ) : (\r\n          <Container  className=\"juggernaut-section\">\r\n            <Row >\r\n              <Col className=\"Board-title \" lg={10}>\r\n                <div className=\"neon-orange\">Hunt the Juggernaut</div>\r\n                <div className=\"neon-blue\">{time}</div>\r\n              </Col>\r\n            </Row>\r\n            <Row className='tableRow  d-flex '>\r\n            <Col lg={5}  >\r\n                <div className = 'jugg-description align-self-center'>\r\n\r\n                </div>\r\n                </Col>\r\n              <Col lg={5}>\r\n                {makeTable()}\r\n              </Col>\r\n              \r\n            </Row>\r\n          </Container>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { loginUser } from \"../services\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport loginImage from '../images/loginImage.jpg'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Row from \"react-bootstrap/esm/Row\";\r\nimport Col from \"react-bootstrap/esm/Col\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport Container from \"react-bootstrap/esm/Container\";\r\n\r\nexport const Login = ({setIsLogged}) => {\r\n  const history = useHistory();\r\n  const [logError, setLogError] = useState(null);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [userLoggingIn, setUserLoggingIn] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    score: 0,\r\n  });\r\n\r\n  const handleNewUser = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setUserLoggingIn((prevUser) => {\r\n      return {\r\n        ...prevUser,\r\n        [name]: value.toLowerCase(),\r\n      };\r\n    });\r\n  };\r\n  \r\n  function simulateNetworkRequest() {\r\n    return new Promise((resolve) => setTimeout(resolve, 2500));\r\n  }\r\n \r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      simulateNetworkRequest().then(() => {\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }, [isLoading]);\r\n\r\n  const loading = () => setLoading(true);\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    if(!isLoading){\r\n      loading() \r\n    loginUser()\r\n      .then((res) => {\r\n        // console.log(res);\r\n        let checkUser = res.data.filter(\r\n          (e) =>\r\n            e.username === userLoggingIn.username &&\r\n            e.password === userLoggingIn.password\r\n        );\r\n        // if (logError){\r\n        //     setLogError(null)}\r\n        if (checkUser.length !== 0) {\r\n          localStorage.setItem(\"LoggedUser\", JSON.stringify\r\n          (checkUser[0]));\r\n          setIsLogged(true)\r\n          // history.push(\"/user\");\r\n          setTimeout(function(){ history.push(\"/user\"); }, 2000);\r\n        } else {\r\n          setLogError(\"Wrong Username or Password\");\r\n          setUserLoggingIn({ username: \"\", password: \"\" });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"AXIOS ERROR: \", err);\r\n\r\n        setUserLoggingIn({ username: \"\", password: \"\" });\r\n      });\r\n    }\r\n  };\r\n  let classes = logError ? \"placeholderRed\" : \"\";\r\n  return (\r\n    <header id=\"home-section\" style={{backgroundImage: `url(${loginImage})`}}>\r\n      <div className=\"dark-overlay\">\r\n\r\n        \r\n          <Container className='home-inner'>\r\n          <Row className='LoginRow'>\r\n            <Col lg={7} className='d-none d-lg-block'>\r\n              <h1 className='display-3 loginText'>Lorem ipsum dolor sit.\r\n              <strong>Lorem, ipsum.</strong>\r\n              </h1>\r\n              <div className='d-flex'>\r\n                <div className='p-4 align-self-start'>\r\n                <FontAwesomeIcon icon={ faCheck } className='fas'size='3x'/>\r\n                </div>\r\n                <div className='p-4 align-self-end  loginText'>\r\n                  Lorem ipsum dolor, sit amet consectetur adipisicing elit. Facere, non expedita praesentium possimus repudiandae totam!\r\n                </div>\r\n              </div>\r\n\r\n              <div className='d-flex'>\r\n                <div className='p-4 align-self-start loginText'>\r\n                <FontAwesomeIcon icon={ faCheck } className='fas'size='3x'/>\r\n                </div>\r\n                <div className='p-4 align-self-end loginText'>\r\n                Lorem ipsum dolor, sit amet consectetur adipisicing elit. Facere, non expedita praesentium possimus repudiandae totam!\r\n                </div>\r\n              </div>\r\n\r\n              <div className='d-flex'>\r\n                <div className='p-4 align-self-start'>\r\n                <FontAwesomeIcon icon={ faCheck } className='fas 'size='3x'/>\r\n                </div>\r\n                <div className='p-4 align-self-end loginText'>\r\n                Lorem ipsum dolor, sit amet consectetur adipisicing elit. Facere, non expedita praesentium possimus repudiandae totam!\r\n                </div>\r\n              </div>\r\n            </Col>\r\n\r\n            <Col lg={5} className=' align-self-center'>\r\n              <Card  bg='primary' text='center' className=\"card-form\" >\r\n                <Card.Body >\r\n                  <h3><strong>Login</strong></h3>\r\n                  <Form onSubmit={login}>\r\n                    <Form.Group  className=\"p-2 \">\r\n                      \r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        size='lg'\r\n                        placeholder={logError ? logError : \"Enter Username\"}\r\n                        className={classes}\r\n                        onChange={handleNewUser}\r\n                        value={userLoggingIn.username}\r\n                        name=\"username\"\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group  className=\"p-2\" >\r\n                      \r\n                      <Form.Control\r\n                        name=\"password\"\r\n                        size='lg'\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        onChange={handleNewUser}\r\n                        value={userLoggingIn.password}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"p-2\">\r\n                      <Button variant=\"outline-light\" block type=\"submit\" disabled={isLoading}>\r\n                      {isLoading ? 'Loading…' : 'Submit'}\r\n                      </Button>\r\n                    </Form.Group>\r\n                    <Link className='linkovi' to='/register'>\r\n                      <Form.Text className=\"p-2 \">\r\n                        Not Registered? Click Here\r\n                      </Form.Text>\r\n                    </Link>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          </Container>\r\n        \r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { postUser } from \"../services\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Col from \"react-bootstrap/esm/Col\";\r\nimport registerImage from '../images/phoenix.png'\r\nexport const Register = ({ newUser, setNewUser }) => {\r\n  const history = useHistory();\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const handleNewUser = (e) => {\r\n    const { name, value } = e.target;\r\n    // console.log(name, value);\r\n    setNewUser((prevUser) => {\r\n      return {\r\n        ...prevUser,\r\n        [name]: value.toLowerCase(),\r\n      };\r\n    });\r\n  };\r\n\r\n  function simulateNetworkRequest() {\r\n    return new Promise((resolve) => setTimeout(resolve, 2500));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      simulateNetworkRequest().then(() => {\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }, [isLoading]);\r\n\r\n  const loading = () => setLoading(true);\r\n\r\n  const redirection = (e) => {\r\n    e.preventDefault();\r\n    if (!isLoading) {\r\n      loading();\r\n    }\r\n    if (newUser.username !== \"\" && newUser.password !== \"\") {\r\n      postUser(newUser)\r\n        .then((res) => {\r\n          // console.log(res);\r\n\r\n          if (errorMsg) {\r\n            setErrorMsg(null);\r\n          }\r\n          localStorage.setItem(\"LoggedUser\", JSON.stringify(newUser));\r\n          setNewUser({ username: \"\", password: \"\" });\r\n          history.push(\"/user\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"AXIOS ERROR: \", err);\r\n          setErrorMsg(`Username ${newUser.username} is already taken`);\r\n          setNewUser({ username: \"\", password: \"\" });\r\n        });\r\n    }\r\n\r\n    // history.push('/user')\r\n  };\r\n  let classes = errorMsg ? \"placeholderRed\" : \"\";\r\n  return (<div className='register-section d-flex' style={{backgroundImage: `url(${registerImage})`}}>\r\n    <div className=\"dark-overlay d-flex justify-content-center\">\r\n    <Col lg={4} className=\" align-self-center\">\r\n      <Card bg=\"primary\" text=\"center\" className=\"card-form\">\r\n        <Card.Body>\r\n          <h3>\r\n            <strong>Register</strong>\r\n          </h3>\r\n          <Form onSubmit={redirection}>\r\n            <Form.Group className=\"p-2 \">\r\n              <Form.Control\r\n                type=\"text\"\r\n                size=\"lg\"\r\n                placeholder={errorMsg ? errorMsg : \"Enter Username\"}\r\n                className={classes}\r\n                onChange={handleNewUser}\r\n                value={newUser.username}\r\n                name=\"username\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"p-2\">\r\n              <Form.Control\r\n                name=\"password\"\r\n                type=\"password\"\r\n                size=\"lg\"\r\n                placeholder=\"Password\"\r\n                onChange={handleNewUser}\r\n                value={newUser.password}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"p-2\">\r\n              <Button\r\n                variant=\"outline-light\"\r\n                block\r\n                type=\"submit\"\r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? \"Loading…\" : \"Submit\"}\r\n              </Button>\r\n            </Form.Group>\r\n            <Link className=\"linkovi\" to=\"/\">\r\n              <Form.Text className=\"p-2 \">\r\n                Already Registered? Click Here\r\n              </Form.Text>\r\n            </Link>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    </div>\r\n    </div>\r\n   \r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {getDotainfos,postScoresHeroHunt} from \"../services\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Container from \"react-bootstrap/esm/Container\";\r\nimport Row from \"react-bootstrap/esm/Row\";\r\nimport Col from \"react-bootstrap/esm/Col\";\r\nimport Card from \"react-bootstrap/esm/Card\";\r\nimport { Navigation } from \"../components/Navigation\";\r\nexport const HeroHunt = () => {\r\n  const [heroes, setHeroes] = useState([]);\r\n  const [bounty, setBouty] = useState([]);\r\n  // const [refresh, setRefresh] = useState(false);\r\n  const [isWin, setIsWin] = useState(false);\r\n  const [int, setInt] = useState();\r\n  const [time, setTime] = useState(0);\r\n  const [scoreHunt, setScoreHunt] = useState({\r\n    username: \"\",\r\n    heroHuntScore: 0,\r\n  });\r\n\r\n  const getShuffledArr = (arr) => {\r\n    const newArr = arr.slice();\r\n    for (let i = newArr.length - 1; i > 0; i--) {\r\n      const rand = Math.floor(Math.random() * (i + 1));\r\n      [newArr[i], newArr[rand]] = [newArr[rand], newArr[i]];\r\n    }\r\n    return newArr;\r\n  };\r\n\r\n  // const shuffle=(array)=>array.sort(() => Math.random() - 0.5);\r\n\r\n  useEffect(() => {\r\n    getDotainfos().then((res) => {\r\n      // console.log(res.data);\r\n      // setHeroes(res.data.map((el) => el.img));\r\n      setHeroes(getShuffledArr(res.data));\r\n\r\n      setBouty(getShuffledArr(res.data).slice(0, 3));\r\n    });\r\n  }, []);\r\n  //dodaj ovde refresh u dependeces\r\n\r\n  useEffect(() => {\r\n    setInt(\r\n      setInterval(() => {\r\n        // console.log(time)\r\n        setTime((time) => {\r\n          return time + 1;\r\n        });\r\n        // console.log(\"izvrsilo se \");\r\n      }, 1000)\r\n    );\r\n\r\n    // getScoresHeroHunt().then(res=>{\r\n    //   console.log(res)\r\n    // })\r\n    return () => clearInterval(int);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isWin) {\r\n      setScoreHunt((prev) => {\r\n        return {\r\n          ...prev,\r\n          username: JSON.parse(localStorage.getItem(\"LoggedUser\")).username,\r\n          heroHuntScore: time,\r\n        };\r\n      });\r\n      clearInterval(int);\r\n    }\r\n  }, [isWin]);\r\n\r\n  useEffect(() => {\r\n    if (scoreHunt.heroHuntScore !== 0) postScoresHeroHunt(scoreHunt);\r\n  }, [scoreHunt]);\r\n\r\n  const pickAhero = (e) => {\r\n    console.log(e.target.id);\r\n\r\n    //  if(condition.some((el)=>e.target.id === el.id))\r\n\r\n    let index = bounty.findIndex((el) => e.target.id === el.img);\r\n    // console.log(index);\r\n    if (bounty.filter((el, idx) => idx !== index).length === 0) setIsWin(true);\r\n    if (index >= 0) {\r\n      setBouty((prev) => prev.filter((el, idx) => idx !== index));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation\r\n        loggedPlayer={JSON.parse(localStorage.getItem(\"LoggedUser\"))}\r\n      />\r\n      {!isWin ? (\r\n        <Container className=\"HeroHunt-container\">\r\n          <Row >\r\n              <Col className=\"Board-title \" lg={10}>\r\n                <div className=\"heroHunt-title\">Wanted! Dead! Not Alive</div>\r\n                <div className=\"neon-blue\">{time}</div>\r\n                <p>Wanted heroes are hiding in hero pool.Find them and eliminate them by clicking on them</p>\r\n              </Col>\r\n            </Row>\r\n          <Row className=\"py-4\">\r\n            \r\n            {bounty.map((el) => (\r\n                <Col lg={4} key={el.img}>\r\n                <Card className='wanted-card'>\r\n                  <Card.Body className='wanted-card-content'>\r\n                  <Image\r\n                key={el.img}\r\n                id={el.img}\r\n                fluid\r\n                className=\" w-50 mb-3 wanted\"\r\n                src={`https://api.opendota.com${el.img}`}\r\n                roundedCircle\r\n                \r\n              />\r\n              <h3>{el.localized_name}</h3>\r\n              <h5 className='text-muted'>Wanted!</h5>\r\n              <p>Wanted for -napraviti neki array sa tekstovima</p>\r\n             \r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              \r\n              \r\n            ))}\r\n          </Row>\r\n          <Row>\r\n            {heroes.map((el) => (\r\n              <Image\r\n                key={el.img}\r\n                id={el.img}\r\n                className=\"heroImg\"\r\n                src={`https://api.opendota.com${el.img}`}\r\n                roundedCircle\r\n                onClick={pickAhero}\r\n              />\r\n            ))}\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Container className=\"d-flex justify-content-center win-section\">\r\n          \r\n            \r\n              <span className=\"winner neon-blue\">YOU</span>\r\n              <span className=\"winner neon-blue\">WIN!</span>\r\n              \r\n          </Container>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n{/* <div class=\"col-lg-3 col-md-6\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <img src=\"img/person1.jpg\" alt=\"\" class=\"img-fluid rounded-circle w-50 mb-3\">\r\n              <h3>Susan Williams</h3>\r\n              <h5 class=\"text-muted\">Lead Writer</h5>\r\n              <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Sed commodi nostrum, ab libero voluptas officia.</p>\r\n              <div class=\"d-flex justify-content-center\">\r\n                <div class=\"p-4\">\r\n                  <a href=\"http://facebook.com\">\r\n                    <i class=\"fab fa-facebook\"></i>\r\n                  </a>\r\n                </div>\r\n                <div class=\"p-4\">\r\n                  <a href=\"http://twitter.com\">\r\n                    <i class=\"fab fa-twitter\"></i>\r\n                  </a>\r\n                </div>\r\n                <div class=\"p-4\">\r\n                  <a href=\"http://instagram.com\">\r\n                    <i class=\"fab fa-instagram\"></i>\r\n                  </a>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> */}","import React, {  useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom'\nimport './App.css';\n\nimport {  Home } from './components/Home';\n\nimport { Profile } from './components/Profile';\nimport { Table } from './JuggernautHunt/Table';\nimport { Login } from './components/Login';\nimport { Register } from './components/Register';\nimport { HeroHunt } from './HeroHunt/HeroHunt';\n\n\nfunction App() {\n\n  const [newUser, setNewUser] = useState({ username: \"\", password: \"\",score:0 });\n  const [isLogged,setIsLogged]= useState(localStorage.getItem('LoggedUser'))\n\n  return (\n    <div className='App'>\n      \n     <Router basename='/Projekat'>\n       <Switch>\n         <Route exact path='/'>\n            <Login setIsLogged={setIsLogged} />\n            \n         </Route>\n         <Route  exact path='/user'>\n           {/* {isLogged !==null ? <Home/>: <Redirect to='/'/> } */}\n           <Home/>\n         </Route>\n         <Route path=\"/user/:username\">\n            <Profile/>\n         </Route>\n         <Route  path='/JuggernautHunt'>\n            <Table nrows={5} ncols={5} chanceJuggOnStart ={0.25} />\n         </Route>\n         <Route  path='/Register'>\n         <Register newUser={newUser} setNewUser={setNewUser}/>\n         </Route>\n         <Route path='/HeroHunt'>\n           <HeroHunt />\n         </Route>\n       </Switch>\n     </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}